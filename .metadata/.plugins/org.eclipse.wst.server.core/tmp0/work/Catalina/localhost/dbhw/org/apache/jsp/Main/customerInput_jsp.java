/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.54
 * Generated at: 2020-12-24 17:16:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Main;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class customerInput_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>Customer Input</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction Insert()\r\n");
      out.write("\t{\r\n");
      out.write("\t\tvar InsertForm = document.customerInsertForm;\r\n");
      out.write("\t\tif(!InsertForm.customerName.value) {\r\n");
      out.write("\t\t\talert(\"이름을 입력해주세요.\");\r\n");
      out.write("\t\t\tInsertForm.customerName.focus();\r\n");
      out.write("\t\t\treturn ;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(!InsertForm.customerPhone1.value) {\r\n");
      out.write("\t\t\talert(\"핸드폰 번호를 입력해주세요.\");\r\n");
      out.write("\t\t\tInsertForm.customerPhone1.focus();\r\n");
      out.write("\t\t\treturn ;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(!InsertForm.customerPhone2.value) {\r\n");
      out.write("\t\t\talert(\"핸드폰 번호를 입력해주세요.\");\r\n");
      out.write("\t\t\tInsertForm.customerPhone2.focus();\r\n");
      out.write("\t\t\treturn ;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(!InsertForm.customerPhone3.value) {\r\n");
      out.write("\t\t\talert(\"핸드폰 번호를 입력해주세요.\");\r\n");
      out.write("\t\t\tInsertForm.customerPhone3.focus();\r\n");
      out.write("\t\t\treturn ;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(!InsertForm.customerAddress.value) {\r\n");
      out.write("\t\t\talert(\"주소를 입력해주세요.\");\r\n");
      out.write("\t\t\tInsertForm.customerAddress.focus();\r\n");
      out.write("\t\t\treturn ;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(!InsertForm.customerGender.value) {\r\n");
      out.write("\t\t\talert(\"성별을 입력해주세요.\");\r\n");
      out.write("\t\t\tInsertForm.customerGender.focus();\r\n");
      out.write("\t\t\treturn ;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(!(InsertForm.customerGender.value == \"Female\" || InsertForm.customerGender.value == \"Male\")) {\r\n");
      out.write("\t\t\talert(\"성별을 형식에 맞게 입력해주세요.\");\r\n");
      out.write("\t\t\tInsertForm.customerGender.focus();\r\n");
      out.write("\t\t\treturn ;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tInsertForm.submit();\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("\t<form name=\"customerInsertForm\" id=\"customerInsertForm\" action=\"customerInsert.jsp\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t이름\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<input type=\"text\" name=\"customerName\" id=\"customerName\" maxlength=\"30\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t핸드폰 번호 (###-###-####)\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<input type=\"text\" name=\"customerPhone1\" id=\"customerPhone1\" size=\"3\" maxlength=\"3\">\r\n");
      out.write("\t\t<input type=\"text\" name=\"customerPhone2\" id=\"customerPhone2\" size=\"3\" maxlength=\"3\">\r\n");
      out.write("\t\t<input type=\"text\" name=\"customerPhone3\" id=\"customerPhone3\" size=\"3\" maxlength=\"4\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t주소\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<input type=\"text\" name=\"customerAddress\" id=\"customerAddress\" maxlength=\"40\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t성별 (Female / Male)\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<input type=\"text\" name=\"customerGender\" id=\"customerGender\" maxlength=\"10\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<input type=\"button\" value=\"입력\" id=\"customerInput\" OnClick=\"javascript:Insert();\">\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
