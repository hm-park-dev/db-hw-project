/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.54
 * Generated at: 2020-12-25 10:57:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Main;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import dbhw.DBConn;

public final class Main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("dbhw.DBConn");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>Main Page</title>\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction doChange(srcE, targetId){\r\n");
      out.write("   \t\tvar val = srcE.options[srcE.selectedIndex].value;\r\n");
      out.write("    \tvar targetE = document.getElementById(targetId);\r\n");
      out.write("    \tremoveAll(targetE);\r\n");
      out.write("\r\n");
      out.write("    \tif(val == 'Customer'){\r\n");
      out.write("        \taddOption('name', targetE);\r\n");
      out.write("        \taddOption('phone', targetE);\r\n");
      out.write("        \taddOption('address', targetE);\r\n");
      out.write("        \taddOption('gender', targetE);\r\n");
      out.write("    \t}\r\n");
      out.write("    \telse if(val == 'Transaction'){\r\n");
      out.write("        \taddOption('transactionNumber', targetE);\r\n");
      out.write("        \taddOption('productID', targetE);\r\n");
      out.write("        \taddOption('price', targetE);\r\n");
      out.write("        \taddOption('date', targetE);\r\n");
      out.write("        \taddOption('customerName', targetE);\r\n");
      out.write("    \t}\r\n");
      out.write("    \telse if(val == 'Product') {\r\n");
      out.write("    \t\taddOption('name', targetE);\r\n");
      out.write("    \t\taddOption('productID', targetE);\r\n");
      out.write("    \t\taddOption('supplierName', targetE);\r\n");
      out.write("    \t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("function addOption(value, e){\r\n");
      out.write("    var o = new Option();\r\n");
      out.write("    o.value = value;\r\n");
      out.write("    o.text = value;\r\n");
      out.write("   \r\n");
      out.write("    e.options.add(o);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function removeAll(e){\r\n");
      out.write("    for(var i = 0, limit = e.options.length; i < limit; ++i){\r\n");
      out.write("        e.remove(1);\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<form name=\"customerInsert\" action=\"customerInput.jsp\">\r\n");
      out.write("\t\t<input type=\"submit\" value=\"고객 입력\">\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<form name=\"transactionInsert\" action=\"transactionInput.jsp\">\r\n");
      out.write("\t\t<input type=\"submit\" value=\"거래 입력\">\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<form name=\"productInsert\" action=\"productInput.jsp\">\r\n");
      out.write("\t\t<input type=\"submit\" value=\"상품 입력\">\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<p> ===================================== </p>\r\n");
      out.write("\t<form name=\"uploadForm\" action=\"csvUpload.jsp\" method=\"post\" enctype=\"Multipart/form-data\">\r\n");
      out.write("\t\t<p>csv 파일 업로드</p>\r\n");
      out.write("\t\t<input type=\"file\" name=\"fileName\">\r\n");
      out.write("\t\t<input type=\"submit\" value=\"업로드\">\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<p> ===================================== </p>\r\n");
      out.write("\t<form name=\"searchForm\" action=\"searchAttr.jsp\">\r\n");
      out.write("\t\t<p>각 Table의 Attribute로 검색합니다.</p>\r\n");
      out.write("\t\t<p>검색할 Table과 Attribute를 선택해주세요.</p>\r\n");
      out.write("\t\t<select name=\"search\" id=\"search\" onchange=\"doChange(this, 'selectAttr')\">\r\n");
      out.write("\t\t\t<option value=\"None\">=== Table ===</option>\r\n");
      out.write("\t\t\t<option value=\"Customer\">Customer</option>\r\n");
      out.write("\t\t\t<option value=\"Transaction\">Transaction</option>\r\n");
      out.write("\t\t\t<option value=\"Product\">Product</option>\r\n");
      out.write("\t\t</select>\r\n");
      out.write("\t\t<select name=\"selectAttr\" id=\"selectAttr\">\r\n");
      out.write("\t\t\t<option value=\"None\">=== Attribute ===</option>\r\n");
      out.write("\t\t</select>\r\n");
      out.write("\t\t<input type=\"text\" name=\"searchValue\" size=\"20\" id=\"searchValue\">\r\n");
      out.write("\t\t<input type=\"submit\" value=\"검색\">\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<p> ===================================== </p>\r\n");
      out.write("\t<form name=\"special1\" action=\"specialSearch1.jsp\">\r\n");
      out.write("\t\t<input type=\"submit\" value=\"남자보다 여자가 많이 산 상품의 이름 검색\">\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<p> ===================================== </p>\r\n");
      out.write("\t<form name=\"special2\" action=\"specialSearch2.jsp\">\r\n");
      out.write("\t\t날짜: <input type=\"date\" name=\"transactionDate\" id=\"transactionDate\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<input type=\"submit\" value=\"주어진 날 이전에 가장 많은 거래가 이루어진 상품 검색\">\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<p> ===================================== </p>\r\n");
      out.write("\t<form name=\"special3\" action=\"specialSearch3.jsp\">\r\n");
      out.write("\t\tm: <input type=\"text\" name=\"mvalue\" size=\"3\" maxlength=\"3\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<input type=\"submit\" value=\"하나의 supplier에서 m번 이상의 제품을 산 고객의 이름 검색\">\r\n");
      out.write("\t</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
